{"version":3,"sources":["video/video.mp4","components/TopControls.js","components/MiddleControls.js","components/ProgressSlider.js","hooks/useHover.js","components/VolumeSlider.js","components/PlaybackRate.js","components/BottomControls.js","components/Controls.js","utils/formatTime.js","components/Player.js","App.js","index.js"],"names":["TopControls","volume","className","parseInt","MiddleControls","playing","elapsedTime","type","rewindIcon","forwardIcon","onPlayPause","useState","pauseIcon","setPauseIcon","playIcon","setPlayIcon","useEffect","setTimeout","onClick","Zoom","in","CircularProgress","size","memo","ValueLabelComponent","props","children","value","Tooltip","enterTouchDelay","placement","title","ProgressSlider","played","onSeek","onSeekMouseDown","onSeekMouseUp","totalDuration","Slider","min","max","step","onChange","onMouseDown","onChangeCommitted","valueLabelDisplay","components","ValueLabel","UseHover","ref","ref1","isHovering","setIsHovering","on","off","current","node","node1","addEventListener","removeEventListener","VolumeSlider","onMuted","muted","onVolumeChange","volumeSliderRef","useRef","volumeSliderBtnRef","useHover","style","width","exit","transform","PlaybackRate","playbackRate","onPlaybackRateChange","containerRef","React","anchorEl","setAnchorEl","open","Boolean","id","undefined","event","currentTarget","Popover","onClose","container","anchorOrigin","vertical","horizontal","transformOrigin","map","rate","BottomControls","onToggleFullScreen","onRewindForward","Controls","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","count","Player","wrapperRef","playerRef","controlsRef","seeking","playerState","setPlayerState","setRewindIcon","setForwardIcon","currentTime","getCurrentTime","duration","getDuration","toggleFullScreen","useCallback","toggleFullscreen","onMouseMove","visibility","height","url","video","onProgress","changeState","onBuffer","state","onBufferEnd","seekTo","e","newValue","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d13932b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/video.bdc1cd12.mp4\";","import React from 'react';\r\n\r\nconst TopControls = ({volume}) => {\r\n    return (\r\n        <div className=\"top-controls\">\r\n            <div className=\"top-controls__flex-container\">\r\n                <div className=\"top-controls__title\">Моцарт и Вивальди Реквием По Мечте 2012</div>\r\n                <div className=\"top-controls__volume-procent\">Громкость - {parseInt(volume * 100)}%</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopControls;","import React, {memo, useEffect, useState} from 'react';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport Replay10Icon from '@mui/icons-material/Replay10';\r\nimport Forward10Icon from '@mui/icons-material/Forward10';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\n\r\nconst MiddleControls = ({playing, elapsedTime, type, rewindIcon, forwardIcon, onPlayPause}) => {\r\n    const [pauseIcon, setPauseIcon] = useState(false);\r\n    const [playIcon, setPlayIcon] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (playing && elapsedTime !== '0:00') {\r\n            setPauseIcon(true);\r\n            setTimeout(() => setPauseIcon(false), 300);\r\n        } else if (!playing && elapsedTime !== '0:00') {\r\n            setPlayIcon(true);\r\n            setTimeout(() => setPlayIcon(false), 300);\r\n        }\r\n    }, [playing]);\r\n\r\n    return (\r\n        <div className=\"middle-controls\" onClick={onPlayPause}>\r\n            <div className=\"middle-controls__wrapper\">\r\n                <Zoom in={pauseIcon || playIcon} className=\"middle-controls__position-center icon icon__bg-size\">\r\n                    {\r\n                        playing ?\r\n                            <PlayArrowIcon/>\r\n                            :\r\n                            <PauseIcon/>\r\n                    }\r\n                </Zoom>\r\n                <div className=\"middle-controls__position-center\">\r\n                    {type === 'waiting' && <CircularProgress className=\"icon__orange-color\" size={50}/>}\r\n                </div>\r\n                <Zoom in={rewindIcon} className=\"middle-controls__position-center icon icon__bg-size\">\r\n                    {\r\n                        <Forward10Icon/>\r\n                    }\r\n                </Zoom>\r\n                <Zoom in={forwardIcon} className=\"middle-controls__position-center icon icon__bg-size\">\r\n                    {\r\n                        <Replay10Icon/>\r\n                    }\r\n                </Zoom>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(MiddleControls);","import React, {memo} from 'react';\r\nimport Slider from '@mui/material/Slider';\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const {children, value} = props;\r\n\r\n    return (\r\n        <Tooltip enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nconst ProgressSlider = ({played, onSeek, onSeekMouseDown, onSeekMouseUp, elapsedTime, totalDuration}) => {\r\n\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div className=\"progress-bar__slider\">\r\n                <Slider\r\n                    className=\"progress-bar__slider_color\"\r\n                    min={0}\r\n                    max={1}\r\n                    step={0.001}\r\n                    value={played}\r\n                    onChange={onSeek}\r\n                    onMouseDown={onSeekMouseDown}\r\n                    onChangeCommitted={onSeekMouseUp}\r\n                    valueLabelDisplay=\"auto\"\r\n                    components={{\r\n                        ValueLabel: (props) => (\r\n                            <ValueLabelComponent {...props} value={elapsedTime}/>\r\n                        )\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"progress-bar__time-display\">{`${elapsedTime} / ${totalDuration}`}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(ProgressSlider);","import React, {useEffect, useState} from 'react';\r\n\r\nconst UseHover = (ref, ref1) => {\r\n    const [isHovering, setIsHovering] = useState(false);\r\n\r\n    const on = () => setIsHovering(true);\r\n    const off = () => setIsHovering(false);\r\n\r\n    useEffect(() => {\r\n        if (!ref.current || !ref1.current) return;\r\n\r\n        const node = ref.current;\r\n        const node1 = ref1.current;\r\n\r\n        node.addEventListener('mouseover', on);\r\n        node.addEventListener('mouseenter', on);\r\n        node.addEventListener('mouseleave', off);\r\n\r\n        node1.addEventListener('mouseover', on);\r\n        node1.addEventListener('mouseenter', on);\r\n        node1.addEventListener('mouseleave', off);\r\n\r\n        return () => {\r\n            node.removeEventListener('mouseover', on);\r\n            node.removeEventListener('mouseenter', on);\r\n            node.removeEventListener('mouseleave', off);\r\n\r\n            node1.removeEventListener('mouseover', on);\r\n            node1.removeEventListener('mouseenter', on);\r\n            node1.removeEventListener('mouseleave', off);\r\n        }\r\n    }, [ref, ref1]);\r\n\r\n    return isHovering;\r\n};\r\n\r\nexport default UseHover;","import React, {memo, useRef} from 'react';\r\nimport Slider from '@mui/material/Slider';\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp';\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff';\r\nimport VolumeDownIcon from '@mui/icons-material/VolumeDown';\r\nimport useHover from \"../hooks/useHover\";\r\nimport Zoom from \"@mui/material/Zoom\";\r\n\r\nconst VolumeSlider = ({onMuted, muted, onVolumeChange, volume}) => {\r\n    const volumeSliderRef = useRef(null);\r\n    const volumeSliderBtnRef = useRef(null);\r\n    const isHovering = useHover(volumeSliderBtnRef, volumeSliderRef);\r\n\r\n    return (\r\n        <div className=\"volume-slider\">\r\n            <div className=\"volume-slider__container\">\r\n                <button\r\n                    className=\"button volume-slider__button\"\r\n                    onClick={onMuted}\r\n                    ref={volumeSliderBtnRef}\r\n                    style={{width: isHovering ? 'calc(100% + 15px)' : 0}}\r\n                >\r\n                    <div className=\"volume-slider__block\">\r\n                        {\r\n                            volume === 0 || muted ?\r\n                                <VolumeOffIcon className=\"icon icon__volume\"/>\r\n                                :\r\n                                volume < 0.5 ?\r\n                                    <VolumeDownIcon className=\"icon icon__volume\"/>\r\n                                    :\r\n                                    <VolumeUpIcon className=\"icon icon__volume\"/>\r\n                        }\r\n                    </div>\r\n                </button>\r\n                <Zoom in={isHovering} exit={false}>\r\n                    <div\r\n                        className=\"volume-slider__pos\"\r\n                        ref={volumeSliderRef}\r\n                        style={{transform: isHovering ? 'translateX(-20px)' : 'translateX(-50px)'}}\r\n                    >\r\n                        <Slider\r\n                            className=\"volume-slider_color\"\r\n                            min={0}\r\n                            max={1}\r\n                            step={0.01}\r\n                            value={volume}\r\n                            onChange={onVolumeChange}\r\n                            onChangeCommitted={onVolumeChange}\r\n                        />\r\n                    </div>\r\n                </Zoom>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default memo(VolumeSlider);","import React, {useRef} from 'react';\r\nimport Popover from '@mui/material/Popover';\r\n\r\nconst PlaybackRate = ({playbackRate, onPlaybackRateChange}) => {\r\n    const containerRef = useRef(null);\r\n    const playbackRateValue = [0.5, 1, 1.5, 2];\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handlePopover = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'popover' : undefined;\r\n\r\n\r\n    return (\r\n        <div ref={containerRef}>\r\n            <button className=\"button\" onClick={handlePopover}>\r\n                <div className=\"controls-panel__playback-rate_white-color\">\r\n                    {playbackRate}X\r\n                </div>\r\n            </button>\r\n            <Popover\r\n                id={id}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={handleClose}\r\n                container={containerRef.current}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'left',\r\n                }}\r\n            >\r\n                <div className=\"controls-panel__playback-rate\">\r\n                    {\r\n                        playbackRateValue.map(rate => (\r\n                            <button className=\"button\" key={rate} onClick={() => onPlaybackRateChange(rate)}>\r\n                                <div className=\"controls-panel__popover-value controls-panel__playback-rate_red-color\">\r\n                                    {rate + 'X'}\r\n                                </div>\r\n                            </button>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </Popover>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default PlaybackRate;","import React, {memo} from 'react';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\nimport Replay10Icon from '@mui/icons-material/Replay10';\r\nimport Forward10Icon from '@mui/icons-material/Forward10';\r\nimport FullscreenIcon from '@mui/icons-material/Fullscreen';\r\nimport PauseIcon from '@mui/icons-material/Pause';\r\nimport ProgressSlider from \"./ProgressSlider\";\r\nimport VolumeSlider from \"./VolumeSlider\";\r\nimport PlaybackRate from \"./PlaybackRate\";\r\n\r\nconst BottomControls = (props) => {\r\n    const {\r\n        onToggleFullScreen, onPlayPause, playing, onRewindForward, onMuted, muted, onVolumeChange, volume,\r\n        onPlaybackRateChange, playbackRate, played, onSeekMouseUp, onSeekMouseDown, onSeek, elapsedTime, totalDuration\r\n    } = props;\r\n\r\n    return (\r\n        <div className=\"bottom-controls\">\r\n            <ProgressSlider\r\n                played={played}\r\n                onSeekMouseUp={onSeekMouseUp}\r\n                onSeekMouseDown={onSeekMouseDown}\r\n                onSeek={onSeek}\r\n                totalDuration={totalDuration}\r\n                elapsedTime={elapsedTime}\r\n            />\r\n            <div className=\"controls-panel\">\r\n                <div className=\"controls-panel__flex-container\">\r\n                    <div className=\"controls-panel__left\">\r\n                        <button className=\"button\" onClick={onPlayPause}>\r\n                            {\r\n                                playing ?\r\n                                    <PauseIcon className=\"icon icon__play-pause\"/>\r\n                                    :\r\n                                    <PlayArrowIcon className=\"icon icon__play-pause\"/>\r\n                            }\r\n                        </button>\r\n\r\n                        <button className=\"button\" onClick={() => onRewindForward(-10)}>\r\n                            <Replay10Icon className=\"icon icon__replay\"/>\r\n                        </button>\r\n\r\n                        <button className=\"button\" onClick={() => onRewindForward(10)}>\r\n                            <Forward10Icon className=\"icon icon__forward\"/>\r\n                        </button>\r\n                        <VolumeSlider\r\n                            volume={volume}\r\n                            muted={muted}\r\n                            onMuted={onMuted}\r\n                            onVolumeChange={onVolumeChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"controls-panel__right\">\r\n                        <PlaybackRate onPlaybackRateChange={onPlaybackRateChange} playbackRate={playbackRate}/>\r\n                        <button className=\"button\" onClick={onToggleFullScreen}>\r\n                            <FullscreenIcon className=\"icon icon__fullscreen\"/>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(BottomControls);","import React, {memo} from 'react';\r\nimport TopControls from \"./TopControls\";\r\nimport MiddleControls from \"./MiddleControls\";\r\nimport BottomControls from \"./BottomControls\";\r\n\r\nconst Controls = (props) => {\r\n    const {\r\n        onToggleFullScreen, onPlayPause, playing, onRewindForward, onMuted, muted, onVolumeChange, volume,\r\n        onPlaybackRateChange, playbackRate, played, onSeek, onSeekMouseDown, onSeekMouseUp, totalDuration, elapsedTime,\r\n        type, forwardIcon, rewindIcon\r\n    } = props;\r\n    return (\r\n        <div className=\"controls\">\r\n            <div className=\"controls__wrapper\">\r\n                <TopControls volume={volume}/>\r\n                <MiddleControls\r\n                    playing={playing}\r\n                    elapsedTime={elapsedTime}\r\n                    type={type}\r\n                    forwardIcon={forwardIcon}\r\n                    rewindIcon={rewindIcon}\r\n                    onPlayPause={onPlayPause}\r\n                />\r\n                <BottomControls\r\n                    played={played}\r\n                    volume={volume}\r\n                    muted={muted}\r\n                    playing={playing}\r\n                    playbackRate={playbackRate}\r\n                    totalDuration={totalDuration}\r\n                    elapsedTime={elapsedTime}\r\n                    onToggleFullScreen={onToggleFullScreen}\r\n                    onPlayPause={onPlayPause}\r\n                    onRewindForward={onRewindForward}\r\n                    onMuted={onMuted}\r\n                    onVolumeChange={onVolumeChange}\r\n                    onPlaybackRateChange={onPlaybackRateChange}\r\n                    onSeek={onSeek}\r\n                    onSeekMouseDown={onSeekMouseDown}\r\n                    onSeekMouseUp={onSeekMouseUp}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(Controls);","const format = (seconds) => {\r\n    if (isNaN(seconds)) {\r\n        return '0:00';\r\n    }\r\n    const date = new Date(seconds * 1000);\r\n\r\n    const hh = date.getUTCHours();\r\n    const mm = date.getUTCMinutes();\r\n    const ss = date.getUTCSeconds().toString().padStart(2, '0');\r\n\r\n    if (hh) {\r\n        return `${hh}:${mm.toString().padStart(2, '0')}:${ss}`;\r\n    }\r\n\r\n    return `${mm}:${ss}`;\r\n};\r\n\r\nexport default format;","import React, {useCallback, useRef, useState} from 'react';\r\nimport ReactPlayer from \"react-player\";\r\nimport video from '../video/video.mp4'\r\nimport Controls from \"./Controls\";\r\nimport toggleFullscreen from 'toggle-fullscreen';\r\nimport format from '../utils/formatTime';\r\n\r\nlet count = 0;\r\n\r\nconst Player = () => {\r\n    const wrapperRef = useRef(null);\r\n    const playerRef = useRef(null);\r\n    const controlsRef = useRef(null);\r\n\r\n    const [playerState, setPlayerState] = useState({\r\n        playing: false,\r\n        muted: false,\r\n        volume: 1,\r\n        playbackRate: 1.0,\r\n        played: 0,\r\n        seeking: false,\r\n        type: null,\r\n    });\r\n    const [rewindIcon, setRewindIcon] = useState(false);\r\n    const [forwardIcon, setForwardIcon] = useState(false);\r\n\r\n    const currentTime = playerRef.current ? playerRef.current.getCurrentTime() : '0:00';\r\n    const duration = playerRef.current ? playerRef.current.getDuration() : '0:00';\r\n\r\n    const elapsedTime = format(currentTime);\r\n    const totalDuration = format(duration);\r\n\r\n    const toggleFullScreen = useCallback(() => toggleFullscreen(wrapperRef.current), []);\r\n\r\n    const handlePlayPause = () => {\r\n        setPlayerState({...playerState, playing: !playerState.playing});\r\n    }\r\n\r\n    const handleRewindForward = (value) => {\r\n        if (value > 0) {\r\n            setRewindIcon(true);\r\n            playerRef.current.seekTo(playerRef.current.getCurrentTime() + value);\r\n            setTimeout(() => setRewindIcon(false), 300);\r\n        }\r\n        if (value < 0) {\r\n            setForwardIcon(true);\r\n            playerRef.current.seekTo(playerRef.current.getCurrentTime() + value);\r\n            setTimeout(() => setForwardIcon(false), 300);\r\n        }\r\n    };\r\n\r\n    const handleMute = () => {\r\n        setPlayerState({...playerState, muted: !playerState.muted});\r\n    };\r\n\r\n    const handleVolumeChange = (e, newValue) => {\r\n        setPlayerState({...playerState, volume: newValue, muted: newValue === 0 ? true : false});\r\n    };\r\n\r\n    const handlePlaybackRateChange = (rate) => {\r\n        setPlayerState({...playerState, playbackRate: rate});\r\n    };\r\n\r\n    const handleProgress = (changeState) => {\r\n        if (count > 3) {\r\n            controlsRef.current.style.visibility = 'hidden';\r\n            count = 0;\r\n        }\r\n\r\n        if (controlsRef.current.style.visibility === 'visible') {\r\n            count += 1;\r\n        }\r\n\r\n        if (!playerState.seeking) {\r\n            setPlayerState({...playerState, ...changeState});\r\n        }\r\n        ;\r\n    };\r\n\r\n    const handleSeekChange = (e, newValue) => {\r\n        setPlayerState({...playerState, played: newValue});\r\n    };\r\n\r\n    const handleSeekMouseDown = (e, newValue) => {\r\n        setPlayerState({...playerState, seeking: true});\r\n    };\r\n\r\n    const handleSeekMouseUp = (e, newValue) => {\r\n        setPlayerState({...playerState, seeking: false});\r\n        playerRef.current.seekTo(newValue);\r\n    };\r\n\r\n    const bufferStart = (state) => {\r\n        setPlayerState({...playerState, type: state.type});\r\n    };\r\n\r\n    const bufferEnd = (state) => {\r\n        setPlayerState({...playerState, type: state.type});\r\n    };\r\n\r\n    const handleMouseMove = () => {\r\n        controlsRef.current.style.visibility = 'visible';\r\n        count = 0;\r\n    }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"player__container\">\r\n                <div className=\"player__wrapper\" ref={wrapperRef} onMouseMove={handleMouseMove}>\r\n                    <ReactPlayer\r\n                        ref={playerRef}\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        url={video}\r\n                        playing={playerState.playing}\r\n                        muted={playerState.muted}\r\n                        volume={playerState.volume}\r\n                        playbackRate={playerState.playbackRate}\r\n                        onProgress={handleProgress}\r\n                        onBuffer={bufferStart}\r\n                        onBufferEnd={bufferEnd}\r\n                    />\r\n                    <div ref={controlsRef}>\r\n                        <Controls\r\n                            playing={playerState.playing}\r\n                            muted={playerState.muted}\r\n                            volume={playerState.volume}\r\n                            playbackRate={playerState.playbackRate}\r\n                            played={playerState.played}\r\n                            type={playerState.type}\r\n                            elapsedTime={elapsedTime}\r\n                            totalDuration={totalDuration}\r\n                            rewindIcon={rewindIcon}\r\n                            forwardIcon={forwardIcon}\r\n                            onPlayPause={handlePlayPause}\r\n                            onRewindForward={handleRewindForward}\r\n                            onMuted={handleMute}\r\n                            onVolumeChange={handleVolumeChange}\r\n                            onToggleFullScreen={toggleFullScreen}\r\n                            onPlaybackRateChange={handlePlaybackRateChange}\r\n                            onSeek={handleSeekChange}\r\n                            onSeekMouseDown={handleSeekMouseDown}\r\n                            onSeekMouseUp={handleSeekMouseUp}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","import React from 'react'\nimport Player from \"./components/Player\";\n\nconst App = () => {\n  return <Player/>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/index.scss';\nimport 'normalize.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}